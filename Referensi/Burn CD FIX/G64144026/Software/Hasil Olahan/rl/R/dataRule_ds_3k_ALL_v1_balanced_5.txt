Pohon Keputusan ke- 5

Call:
C5.0.formula(formula = CLASS ~ ., data = trainData, rules = TRUE)

Rule-Based Model
Number of samples: 526 
Number of predictors: 15 

Number of Rules: 32 

Non-standard options: attempt to group attributes


C5.0 [Release 2.07 GPL Edition]  	Sun Mar 05 00:57:57 2017
-------------------------------

Class specified by attribute `outcome'

Read 526 cases (16 attributes) from undefined.data

Rules:

Rule 1: (46, lift 2.9)
	IPB108 in {A, B}
	KPM130 in {A, B}
	BIO100 = D
	EKO100 in {BC, D, E}
	IPB100 in {A, AB, D}
	KOM201 in {AB, B, BC, C}
	MAT103 in {C, D}
	->  class HighRisk  [0.979]

Rule 2: (90/1, lift 2.9)
	IPB108 in {A, B, BC}
	KPM130 in {A, B, D}
	MAT100 in {B, C, D, E}
	BIO100 in {C, D}
	EKO100 in {B, BC, C, D}
	IPB100 in {A, AB, B, C, D}
	KOM201 in {AB, B, BC, C}
	MAT103 in {A, B, BC, C, D}
	->  class HighRisk  [0.978]

Rule 3: (57/1, lift 2.9)
	IPB107 in {B, BC, C}
	IPB108 in {A, B, BC}
	KPM130 in {BC, C}
	EKO100 in {C, D}
	IPB106 in {A, AB, B}
	KIM101 in {B, C, D}
	->  class HighRisk  [0.966]

Rule 4: (11, lift 2.8)
	IPB111 = AB
	BIO100 = BC
	EKO100 = BC
	MAT103 = D
	->  class HighRisk  [0.923]

Rule 5: (32/3, lift 2.6)
	IPB108 in {A, B, BC}
	IPB112 = B
	BIO100 in {C, D}
	EKO100 in {C, D}
	IPB100 in {AB, B, D}
	KOM201 in {AB, B, BC, C}
	->  class HighRisk  [0.882]

Rule 6: (56, lift 2.9)
	FIS100 in {A, AB, BC, C}
	BIO100 in {A, AB, B, BC}
	KIM101 in {A, AB}
	->  class LowRisk  [0.983]

Rule 7: (34, lift 2.9)
	IPB111 in {AB, B, BC}
	MAT103 = AB
	->  class LowRisk  [0.972]

Rule 8: (24, lift 2.9)
	BIO100 in {A, AB, B, BC}
	KIM101 in {B, BC, C}
	MAT103 = A
	->  class LowRisk  [0.962]

Rule 9: (72/3, lift 2.8)
	MAT100 in {A, AB}
	KOM201 = A
	->  class LowRisk  [0.946]

Rule 10: (14, lift 2.8)
	IPB100 = A
	MAT103 = B
	->  class LowRisk  [0.938]

Rule 11: (7, lift 2.7)
	FIS100 = B
	BIO100 in {B, BC}
	EKO100 in {B, BC}
	KIM101 = A
	->  class LowRisk  [0.889]

Rule 12: (5, lift 2.6)
	AGB100 in {A, AB}
	MAT100 = B
	EKO100 in {B, BC}
	KOM201 = A
	->  class LowRisk  [0.857]

Rule 13: (4, lift 2.5)
	IPB108 = A
	MAT100 = BC
	KOM201 = A
	MAT103 in {A, BC, C}
	->  class LowRisk  [0.833]

Rule 14: (155/30, lift 2.4)
	EKO100 in {A, AB}
	->  class LowRisk  [0.803]

Rule 15: (25/7, lift 2.1)
	FIS100 in {AB, BC}
	KPM130 = AB
	KOM201 in {AB, B, BC}
	->  class LowRisk  [0.704]

Rule 16: (32, lift 2.9)
	BIO100 in {AB, B, BC, E}
	EKO100 in {B, BC, C, D}
	KIM101 in {BC, C, D}
	KOM201 in {AB, B, BC}
	MAT103 in {BC, C}
	->  class MediumRisk  [0.971]

Rule 17: (28, lift 2.9)
	KPM130 in {BC, C}
	EKO100 = BC
	MAT103 in {B, BC, C, D}
	->  class MediumRisk  [0.967]

Rule 18: (14, lift 2.8)
	FIS100 in {C, D}
	IPB112 = A
	KPM130 = AB
	BIO100 in {C, D}
	EKO100 in {B, BC, C, D}
	MAT103 in {BC, C, D}
	->  class MediumRisk  [0.938]

Rule 19: (25/1, lift 2.8)
	BIO100 in {AB, B, BC, E}
	EKO100 in {B, BC, C, D}
	IPB100 in {AB, BC, C, D}
	KIM101 in {B, BC, C}
	KOM201 in {AB, B, BC}
	MAT103 in {A, B, BC, C}
	->  class MediumRisk  [0.926]

Rule 20: (11, lift 2.8)
	IPB111 in {B, BC}
	BIO100 in {A, BC, E}
	MAT103 = D
	->  class MediumRisk  [0.923]

Rule 21: (8, lift 2.7)
	KPM130 in {A, B}
	MAT100 in {AB, BC}
	BIO100 in {C, D}
	EKO100 in {B, C}
	MAT103 in {BC, C, D}
	->  class MediumRisk  [0.900]

Rule 22: (23/2, lift 2.7)
	MAT100 = C
	KOM201 = A
	MAT103 in {A, B, BC, D}
	->  class MediumRisk  [0.880]

Rule 23: (13/1, lift 2.6)
	IPB108 in {AB, C, D}
	BIO100 in {C, D}
	EKO100 in {C, D}
	->  class MediumRisk  [0.867]

Rule 24: (12/1, lift 2.6)
	IPB107 = AB
	MAT100 in {A, AB, BC, C}
	EKO100 in {A, AB}
	MAT103 in {BC, C}
	->  class MediumRisk  [0.857]

Rule 25: (5, lift 2.6)
	IPB108 = B
	MAT100 = BC
	KOM201 = A
	->  class MediumRisk  [0.857]

Rule 26: (5, lift 2.6)
	IPB107 in {B, BC, C}
	KPM130 in {BC, C}
	KIM101 in {AB, BC}
	KOM201 in {AB, B}
	->  class MediumRisk  [0.857]

Rule 27: (15/2, lift 2.5)
	KPM130 in {BC, C}
	IPB106 in {BC, C}
	->  class MediumRisk  [0.824]

Rule 28: (20/3, lift 2.5)
	FIS100 in {AB, C}
	EKO100 in {A, AB}
	MAT103 in {BC, C, D}
	->  class MediumRisk  [0.818]

Rule 29: (8/1, lift 2.4)
	AGB100 = B
	MAT103 in {C, D}
	->  class MediumRisk  [0.800]

Rule 30: (13/2, lift 2.4)
	IPB107 in {AB, D}
	KPM130 in {BC, C}
	EKO100 in {B, BC, C, D}
	MAT103 in {A, B, BC, D}
	->  class MediumRisk  [0.800]

Rule 31: (8/1, lift 2.4)
	BIO100 in {C, D}
	IPB100 = BC
	MAT103 in {B, D}
	->  class MediumRisk  [0.800]

Rule 32: (3, lift 2.4)
	IPB111 = A
	EKO100 = BC
	MAT103 = AB
	->  class MediumRisk  [0.800]

Default class: MediumRisk


Evaluation on training data (526 cases):

	        Rules     
	  ----------------
	    No      Errors

	    32   18( 3.4%)   <<


	   (a)   (b)   (c)    <-classified as
	  ----  ----  ----
	   176                (a): class HighRisk
	         169     7    (b): class LowRisk
	     3     8   163    (c): class MediumRisk


	Attribute usage:

	 85.74%	EKO100
	 65.02%	MAT103
	 58.56%	BIO100
	 56.08%	KOM201
	 49.05%	KPM130
	 41.44%	MAT100
	 36.31%	IPB108
	 35.93%	KIM101
	 31.56%	IPB100
	 22.62%	FIS100
	 16.54%	IPB107
	 13.69%	IPB106
	 11.22%	IPB111
	  8.75%	IPB112
	  2.47%	AGB100


Time: 0.0 secs

C5.0.formula(formula = CLASS ~ ., data = trainData, rules = TRUE)
akurasi pada k ke- 	5	: 	88.14
Confusion Matrix dan akurasi ke- 5
            
predictRule  HighRisk LowRisk MediumRisk
  HighRisk         19       0          1
  LowRisk           0      17          4
  MediumRisk        0       2         16
PostResample TREE ke- 5
 Accuracy     Kappa 
0.8983051 0.8475452 
PostResample RULE ke- 5
 Accuracy     Kappa 
0.8813559 0.8222892 
Confusion Matrix TREE ke- 5
Confusion Matrix and Statistics

            Reference
Prediction   HighRisk LowRisk MediumRisk
  HighRisk         19       0          1
  LowRisk           0      17          3
  MediumRisk        0       2         17

Overall Statistics
                                          
               Accuracy : 0.8983          
                 95% CI : (0.7917, 0.9618)
    No Information Rate : 0.3559          
    P-Value [Acc > NIR] : < 2.2e-16       
                                          
                  Kappa : 0.8475          
 Mcnemar's Test P-Value : NA              

Statistics by Class:

                     Class: HighRisk Class: LowRisk Class: MediumRisk
Sensitivity                   1.0000         0.8947            0.8095
Specificity                   0.9750         0.9250            0.9474
Pos Pred Value                0.9500         0.8500            0.8947
Neg Pred Value                1.0000         0.9487            0.9000
Prevalence                    0.3220         0.3220            0.3559
Detection Rate                0.3220         0.2881            0.2881
Detection Prevalence          0.3390         0.3390            0.3220
Balanced Accuracy             0.9875         0.9099            0.8784
Confusion Matrix RULE ke- 5
Confusion Matrix and Statistics

            Reference
Prediction   HighRisk LowRisk MediumRisk
  HighRisk         19       0          1
  LowRisk           0      17          4
  MediumRisk        0       2         16

Overall Statistics
                                          
               Accuracy : 0.8814          
                 95% CI : (0.7707, 0.9509)
    No Information Rate : 0.3559          
    P-Value [Acc > NIR] : < 2.2e-16       
                                          
                  Kappa : 0.8223          
 Mcnemar's Test P-Value : NA              

Statistics by Class:

                     Class: HighRisk Class: LowRisk Class: MediumRisk
Sensitivity                   1.0000         0.8947            0.7619
Specificity                   0.9750         0.9000            0.9474
Pos Pred Value                0.9500         0.8095            0.8889
Neg Pred Value                1.0000         0.9474            0.8780
Prevalence                    0.3220         0.3220            0.3559
Detection Rate                0.3220         0.2881            0.2712
Detection Prevalence          0.3390         0.3559            0.3051
Balanced Accuracy             0.9875         0.8974            0.8546
